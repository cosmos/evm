// Code generated by mockery v2.53.5. DO NOT EDIT.

package mocks

import (
	types "github.com/cosmos/cosmos-sdk/types"
	mock "github.com/stretchr/testify/mock"

	vmtypes "github.com/cosmos/evm/x/vm/types"
)

// VMKeeper is an autogenerated mock type for the VMKeeper type
type VMKeeper struct {
	mock.Mock
}

// GetEvmCoinInfo provides a mock function with given fields: ctx
func (_m *VMKeeper) GetEvmCoinInfo(ctx types.Context) vmtypes.EvmCoinInfo {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for GetEvmCoinInfo")
	}

	var r0 vmtypes.EvmCoinInfo
	if rf, ok := ret.Get(0).(func(types.Context) vmtypes.EvmCoinInfo); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(vmtypes.EvmCoinInfo)
	}

	return r0
}

// NewVMKeeper creates a new instance of VMKeeper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewVMKeeper(t interface {
	mock.TestingT
	Cleanup(func())
}) *VMKeeper {
	mock := &VMKeeper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
