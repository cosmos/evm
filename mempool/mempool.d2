direction: up

# entities
prepare proposal
check tx handler
comet bft
rpc call
broadcast
rebroadcast callback: { shape: diamond }
evm mempool: {
    direction: right

    # entities
    ext mempool interface impl
    cosmos priority nonce mempool
    tx pool: {
        direction: down

        # entities
        queued\ntransactions
        pending\ntransactions
        tx pool\ninterface
        reset loop\n(evicts from queued\nand pending txs)
        promotion: {shape: diamond }
        filter: { shape: diamond }
        
        # edges
        filter -> queued\ntransactions: add nonce\ngapped tx
        filter -> pending\ntransactions: add\nexecutable tx
        queued\ntransactions -> promotion: check closed gap\nand promote tx
        promotion -> pending\ntransactions: promote tx
    }
    

    # edges
    tx pool.tx pool\ninterface -> ext mempool interface impl: get txs for\nblock building

    ext mempool interface impl -> tx pool.tx pool\ninterface: success/nonce gap failure:\nadd valid evm txs { style.stroke: red }
    ext mempool interface impl -> tx pool.tx pool\ninterface: recheck tx\neviction { style.stroke: red }
    ext mempool interface impl -> cosmos priority nonce mempool: add\ncosmos txs { style.stroke: red }

    
    cosmos priority nonce mempool -> ext mempool interface impl: get txs for\nblock building
}

# edges
evm mempool.tx pool.promotion -> rebroadcast callback: call rebroadcast\ncallback { style.stroke: red }
evm mempool.ext mempool interface impl -> prepare proposal: get txs for\nblock building

rebroadcast callback -> comet bft: rebroadcast\nrebuilt tx { style.stroke: red }

comet bft -> broadcast: success:\nbroadcast tx
comet bft -> check tx handler: send tx\nfor validation
comet bft -> check tx handler: send tx again\nfor recheck

check tx handler -> comet bft: success:\nbroadcast and\nadd to mempool
check tx handler -> rpc call: queued\nsuccess response
check tx handler -> evm mempool.ext mempool interface impl: complete failure:\nremove from pending { style.stroke: red }
check tx handler -> evm mempool.ext mempool interface impl: nonce gap failure:\nadd transaction { style.stroke: red }
check tx handler -> evm mempool.ext mempool interface impl: success:\nadd txs { style.stroke: red }
check tx handler -> evm mempool.ext mempool interface impl: recheck tx\nfailure: eviction { style.stroke: red }

